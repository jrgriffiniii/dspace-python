version: 2.1

jobs:
  build:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  lint:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock
      - run:
          name: 'Lint the Python source files'
          command: |
            if [[ $(python --version 2>&1) =~ 3\.8\. ]]; then
              pipenv run black
            fi
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  doc:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock
      - run:
          name: 'Generate the code documentation'
          command: |
            pipenv run sphinx-build -b html source build/html
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv
      - store_artifacts:
          path: ~/dspace-python/build/html

  test:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock
      - run:
          name: 'Run the Python unit and module tests'
          command: |
            echo 'no op'
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  build_thesis_central:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python/thesiscentral-vireo/dataspace/python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock --dev
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  lint_thesis_central:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python/thesiscentral-vireo/dataspace/python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock --dev
      - run:
          name: 'Lint the Python source files'
          command: |
            pipenv run pylint
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  doc_thesis_central:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python/thesiscentral-vireo/dataspace/python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock --dev
      - run:
          name: 'Generate the code documentation'
          command: |
            pipenv run sphinx-build -b html source build/html
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv
      - store_artifacts:
          path: ~/dspace-python/build/html

  test_thesis_central:
    parameters:
      python_version:
        type: string
        default: '3.6.9'
    working_directory: ~/dspace-python/thesiscentral-vireo/dataspace/python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv lock --pre
            pipenv install --skip-lock --dev
      - run:
          name: 'Run the Python unit and module tests'
          command: |
            pipenv run pytest
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

workflows:
  build_lint_doc_test:
    jobs:
      - build:
          name: build-python3.6
          python_version: '3.6.9'
      - lint:
          name: lint-python3.6
          python_version: '3.6.9'
          requires:
            - build-python3.6
      - doc:
          name: doc-python3.6
          python_version: '3.6.9'
          requires:
            - build-python3.6
      - test:
          name: test-python3.6
          python_version: '3.6.9'
          requires:
            - lint-python3.6

  thesis_central:
    jobs:
      - build_thesis_central:
          name: build-thesis-central3.6
          python_version: '3.6.9'
      - lint_thesis_central:
          name: lint-thesis-central3.6
          python_version: '3.6.9'
          requires:
            - build-thesis-central3.6
      - doc_thesis_central:
          name: doc-thesis-central3.6
          python_version: '3.6.9'
          requires:
            - build-thesis-central3.6
      - test_thesis_central:
          name: test-thesis-central3.6
          python_version: '3.6.9'
          requires:
            - lint-thesis-central3.6
