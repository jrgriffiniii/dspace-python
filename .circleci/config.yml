version: 2.1

jobs:
  build:
    parameters:
      python_version:
        type: string
        default: '3.8.3'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  lint:
    parameters:
      python_version:
        type: string
        default: '3.8.3'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv install
      - run:
          name: 'Lint the Python source files'
          command: |
            pipenv run black
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  test:
    parameters:
      python_version:
        type: string
        default: '3.8.3'
    working_directory: ~/dspace-python
    docker:
      - image: circleci/python:<< parameters.python_version >>-node-browsers-legacy
    steps:
      - checkout
      - restore_cache:
          name: Restore the cache
          keys:
            - pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: 'Install package dependencies using pipenv'
          command: |
            sudo pip install pipenv
            pipenv install
      - run:
          name: 'Run the Python unit and module tests'
          command: |
            echo 'no op'
      - save_cache:
          key: pip-packages-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

workflows:
  build_lint_test:
    jobs:
      - build:
          name: python3.8
          python_version: '3.8.3'
      - lint:
          name: python3.8
          python_version: '3.8.3'
      - test:
          name: python3.8
          python_version: '3.8.3'
